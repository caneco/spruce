{"version":3,"file":"spruce.js","sources":["../src/utils.js","../src/observable.js","../src/index.js"],"sourcesContent":["export const domReady = () => {\n    return new Promise(resolve => {\n        if (document.readyState == \"loading\") {\n            document.addEventListener(\"DOMContentLoaded\", resolve)\n        } else {\n            resolve()\n        }\n    })\n}\n\nexport const isNullOrUndefined = value => {\n    return value === null || value === undefined\n}\n\nexport const isObject = _ => {\n    return Object.getPrototypeOf(_) === Object.prototype\n}\n\nexport const isArray = _ => Array.isArray(_)\n\nexport const getMethods = obj => {\n    let methods = {}\n\n    Object.entries(obj).filter(([key, value]) => typeof value === 'function').forEach(([key, value]) => methods[key] = value)\n\n    return methods\n}","import { isNullOrUndefined, isObject, isArray } from './utils'\n\nexport const createObservable = (target, callbacks) => {\n    Object.entries(target).forEach(([key, value]) => {\n        if (! isNullOrUndefined(value) && (isObject(value) || isArray(value))) {\n            target[key] = createObservable(value, callbacks)\n        }\n    })\n\n    return new Proxy(target, {\n        set(target, key, value) {\n            if (! isNullOrUndefined(value) && isObject(value)) {\n                value = createObservable(value, callbacks)\n            }\n\n            callbacks.set(target, key, target[key] = value)\n\n            return true\n        }\n    })\n}","import { domReady, getMethods } from './utils'\nimport { createObservable } from './observable'\n\nconst Spruce = {\n    stores: {},\n\n    persisted: [],\n\n    subscribers: [],\n\n    disableReactivity: false,\n\n    async start() {\n        await domReady()\n        \n        this.attach()\n\n        this.stores = createObservable(this.stores, {\n            set: () => {\n                if (this.disableReactivity) {\n                    return\n                }\n\n                this.updateSubscribers()\n\n                this.disableReactivity = true\n                this.persisted.forEach(this.updateLocalStorage.bind(this))\n                this.disableReactivity = false\n            }\n        })\n    },\n\n    attach() {\n        if (! window.Alpine) {\n            throw new Error('[Spruce] You must be using Alpine >= 2.5.0 to use Spruce.')\n        }\n\n        const self = this\n\n        window.Alpine.addMagicProperty('store', el => {\n            self.subscribe(el)\n\n            return self.stores\n        })\n    },\n\n    store(name, state, persist = false) {\n        if (persist) {\n            this.stores[name] = this.retrieveFromLocalStorage(name, getMethods(state))\n\n            if (! this.persisted.includes(name)) {\n                this.persisted.push(name)\n            }\n        }\n\n        if (! this.stores[name]) {\n            this.stores[name] = state\n        }\n\n        return this.stores[name]\n    },\n\n    reset(name, state) {\n        this.stores[name] = state\n    },\n\n    subscribe(el) {\n        if (! this.subscribers.includes(el)) {\n            this.subscribers.push(el)\n        }\n\n        return this.stores\n    },\n\n    updateSubscribers() {\n        this.subscribers.filter(el => !! el.__x).forEach(el => {\n            el.__x.updateElements(el)\n        })\n    },\n\n    retrieveFromLocalStorage(name, methods = {}) {\n        const storage = JSON.parse(window.localStorage.getItem(`__spruce:${name}`))\n\n        return storage ? Object.assign(methods, storage) : null\n    },\n\n    updateLocalStorage(name) {\n        window.localStorage.setItem(`__spruce:${name}`, JSON.stringify(this.store(name)))\n    }\n}\n\nconst deferrer = window.deferLoadingAlpine || function (callback) { callback() }\n\nwindow.deferLoadingAlpine = function (callback) {\n    window.Spruce = Spruce\n    window.Spruce.start()\n\n    deferrer(callback)\n}\n\nexport default Spruce\n"],"names":["const","isNullOrUndefined","value","isObject","_","Object","getPrototypeOf","prototype","createObservable","target","callbacks","entries","forEach","Array","isArray","key","Proxy","set","Spruce","stores","persisted","subscribers","disableReactivity","start","this","Promise","resolve","document","readyState","addEventListener","attach","_this","updateSubscribers","updateLocalStorage","bind","window","Alpine","Error","self","addMagicProperty","el","subscribe","store","name","state","persist","methods","retrieveFromLocalStorage","filter","includes","push","reset","__x","updateElements","storage","JSON","parse","localStorage","getItem","assign","setItem","stringify","deferrer","deferLoadingAlpine","callback"],"mappings":"AAAOA,IAUMC,WAAoBC,UACtBA,MAAAA,GAGEC,WAAWC,UACbC,OAAOC,eAAeF,KAAOC,OAAOE,WCblCC,WAAoBC,EAAQC,UACrCL,OAAOM,QAAQF,GAAQG,sCACbX,EAAkBC,KAAWC,EAASD,KDcxBW,MAAMC,QCdoCZ,KAC1DO,EAAOM,GAAOP,EAAiBN,EAAOQ,MAIvC,IAAIM,MAAMP,EAAQ,CACrBQ,aAAIR,EAAQM,EAAKb,UACPD,EAAkBC,IAAUC,EAASD,KACvCA,EAAQM,EAAiBN,EAAOQ,IAGpCA,EAAUO,IAAIR,EAAQM,EAAKN,EAAOM,GAAOb,IAElC,MCdbgB,EAAS,CACXC,OAAQ,GAERC,UAAW,GAEXC,YAAa,GAEbC,mBAAmB,EAEbC,2BAGFC,4BFdG,IAAIC,iBAAQC,GACY,WAAvBC,SAASC,WACTD,SAASE,iBAAiB,mBAAoBH,GAE9CA,yBEUCI,WAEAX,OAASX,EAAiBuB,EAAKZ,OAAQ,CACxCF,eACQc,EAAKT,sBAIJU,sBAEAV,mBAAoB,IACpBF,UAAUR,QAAQmB,EAAKE,mBAAmBC,WAC1CZ,mBAAoB,4CAKrCQ,sBACUK,OAAOC,aACH,IAAIC,MAAM,iEAGdC,EAAOd,KAEbW,OAAOC,OAAOG,iBAAiB,iBAASC,UACpCF,EAAKG,UAAUD,GAERF,EAAKnB,UAIpBuB,eAAMC,EAAMC,EAAOC,OFzBfC,yBEyByB,GACrBD,SACK1B,OAAOwB,GAAQnB,KAAKuB,yBAAyBJ,GF3BtDG,EAAU,GAEdzC,OAAOM,QEyBoEiC,GFzBvDI,yBAA0C,0BAAYpC,2BAA0BkC,eAE7FA,IEyBOtB,KAAKJ,UAAU6B,SAASN,SACrBvB,UAAU8B,KAAKP,IAItBnB,KAAKL,OAAOwB,UACTxB,OAAOwB,GAAQC,GAGjBpB,KAAKL,OAAOwB,IAGvBQ,eAAMR,EAAMC,QACHzB,OAAOwB,GAAQC,GAGxBH,mBAAUD,UACAhB,KAAKH,YAAY4B,SAAST,SACvBnB,YAAY6B,KAAKV,GAGnBhB,KAAKL,QAGhBa,kCACSX,YAAY2B,gBAAOR,WAASA,EAAGY,MAAKxC,iBAAQ4B,GAC7CA,EAAGY,IAAIC,eAAeb,MAI9BO,kCAAyBJ,EAAMG,kBAAU,QAC/BQ,EAAUC,KAAKC,MAAMrB,OAAOsB,aAAaC,oBAAoBf,WAE5DW,EAAUjD,OAAOsD,OAAOb,EAASQ,GAAW,MAGvDrB,4BAAmBU,GACfR,OAAOsB,aAAaG,oBAAoBjB,EAAQY,KAAKM,UAAUrC,KAAKkB,MAAMC,OAI5EmB,EAAW3B,OAAO4B,oBAAsB,SAAUC,GAAYA,KAEpE7B,OAAO4B,mBAAqB,SAAUC,GAClC7B,OAAOjB,OAASA,EAChBiB,OAAOjB,OAAOK,QAEduC,EAASE"}